CREATE TABLE `alerts` (`uuid` text,`host_uuid` text,`entity_type` text,`entity_uuid` text,`type` text,`status` text,`severity` text,`target` text,`title` text,`body` text,`notified` numeric DEFAULT false,`notified_at` datetime,`created_at` datetime,`last_updated` datetime, `source` text, `emailed` numeric DEFAULT false, `emailed_at` datetime, `acknowledge_timeout` datetime,PRIMARY KEY (`uuid`));
CREATE TABLE `tags` (`tag` varchar(255) NOT NULL UNIQUE DEFAULT null,PRIMARY KEY (`tag`));
CREATE TABLE `alerts_tags` (`tag_tag` varchar(255) NOT NULL DEFAULT null,`alert_uuid` text,PRIMARY KEY (`tag_tag`,`alert_uuid`),CONSTRAINT `fk_alerts_tags_alert` FOREIGN KEY (`alert_uuid`) REFERENCES `alerts`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_alerts_tags_tag` FOREIGN KEY (`tag_tag`) REFERENCES `tags`(`tag`) ON DELETE CASCADE);
CREATE TABLE `alert_closeds` (`uuid` text,`host_uuid` text,`entity_type` text,`entity_uuid` text,`type` text,`status` text,`severity` text,`target` text,`title` text,`body` text,`notified` numeric DEFAULT false,`notified_at` datetime,`created_at` datetime,`last_updated` datetime,`closed_at` datetime,PRIMARY KEY (`uuid`));
CREATE TABLE `teams` (`uuid` text,`name` varchar(255) NOT NULL UNIQUE,`address` text,`city` text,`state` text,`zip` integer,`country` text,`lat` text,`lon` text,`time_zone` text,PRIMARY KEY (`uuid`));
CREATE TABLE `alert_teams` (`alert_uuid` text NOT NULL DEFAULT null,`team_uuid` text NOT NULL DEFAULT null,PRIMARY KEY (`alert_uuid`,`team_uuid`),CONSTRAINT `fk_alerts_teams` FOREIGN KEY (`alert_uuid`) REFERENCES `alerts`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_teams_alerts` FOREIGN KEY (`team_uuid`) REFERENCES `teams`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `networks_tags` (`tag_tag` varchar(255) NOT NULL DEFAULT null,`network_uuid` varchar(255),PRIMARY KEY (`tag_tag`,`network_uuid`),CONSTRAINT `fk_networks_tags_tag` FOREIGN KEY (`tag_tag`) REFERENCES `tags`(`tag`) ON DELETE CASCADE,CONSTRAINT `fk_networks_tags_network` FOREIGN KEY (`network_uuid`) REFERENCES `networks`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `devices_tags` (`tag_tag` varchar(255) NOT NULL DEFAULT null,`device_uuid` varchar(255),PRIMARY KEY (`tag_tag`,`device_uuid`),CONSTRAINT `fk_devices_tags_device` FOREIGN KEY (`device_uuid`) REFERENCES `devices`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_devices_tags_tag` FOREIGN KEY (`tag_tag`) REFERENCES `tags`(`tag`) ON DELETE CASCADE);
CREATE TABLE `points_tags` (`tag_tag` varchar(255) NOT NULL DEFAULT null,`point_uuid` varchar(255),PRIMARY KEY (`tag_tag`,`point_uuid`),CONSTRAINT `fk_points_tags_tag` FOREIGN KEY (`tag_tag`) REFERENCES `tags`(`tag`) ON DELETE CASCADE,CONSTRAINT `fk_points_tags_point` FOREIGN KEY (`point_uuid`) REFERENCES `points`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `priorities` (`point_uuid` varchar(255) NOT NULL DEFAULT null,`p1` real,`p2` real,`p3` real,`p4` real,`p5` real,`p6` real,`p7` real,`p8` real,`p9` real,`p10` real,`p11` real,`p12` real,`p13` real,`p14` real,`p15` real,`p16` real,PRIMARY KEY (`point_uuid`),CONSTRAINT `fk_points_priority` FOREIGN KEY (`point_uuid`) REFERENCES `points`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `jobs` (`uuid` varchar(255) UNIQUE,`name` text,`description` text,`frequency` text,`start_date` datetime,`end_date` datetime,`enable` numeric,`destroy_after_completed` numeric,`plugin_conf_id` varchar(255) DEFAULT null,`created_at` datetime,`updated_at` datetime,`last_write` datetime,PRIMARY KEY (`uuid`),CONSTRAINT `fk_plugin_confs_job` FOREIGN KEY (`plugin_conf_id`) REFERENCES "plugins"(`uuid`) ON DELETE CASCADE);
CREATE TABLE `integrations` (`uuid` varchar(255) UNIQUE,`name` varchar(255) NOT NULL UNIQUE,`description` text,`enable` numeric,`in_fault` numeric,`message_level` text,`message_code` text,`message` text,`message_fail` text,`last_ok` datetime,`last_fail` datetime,`ip` text,`port` integer,`username` text,`password` text,`token` text,`plugin_name` text,`integration_type` text,`plugin_conf_id` varchar(255) NOT NULL DEFAULT null,`created_at` datetime,`updated_at` datetime,`last_write` datetime,PRIMARY KEY (`uuid`),CONSTRAINT `fk_plugin_confs_integration` FOREIGN KEY (`plugin_conf_id`) REFERENCES "plugins"(`uuid`) ON DELETE CASCADE);
CREATE TABLE `teams_tags` (`team_uuid` text,`tag_tag` varchar(255) NOT NULL DEFAULT null,PRIMARY KEY (`team_uuid`,`tag_tag`),CONSTRAINT `fk_teams_tags_team` FOREIGN KEY (`team_uuid`) REFERENCES `teams`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_teams_tags_tag` FOREIGN KEY (`tag_tag`) REFERENCES `tags`(`tag`) ON DELETE CASCADE);
CREATE TABLE `histories` (`history_id` integer,`id` integer,`point_uuid` text,`host_uuid` text,`value` real,`timestamp` datetime,PRIMARY KEY (`history_id`));
CREATE TABLE `history_logs` (`id` integer,`host_uuid` text,`last_sync_id` integer,`timestamp` datetime, `metric_log_last_sync_id` integer, `metric_log_timestamp` datetime,PRIMARY KEY (`id`));
CREATE INDEX `idx_history_logs_id` ON `history_logs`(`id`);
CREATE TABLE `history_postgres_logs` (`id` integer,`point_uuid` text,`host_uuid` text,`value` real,`timestamp` datetime,PRIMARY KEY (`id`));
CREATE TABLE `network_meta_tags` (`network_uuid` varchar(255) NOT NULL DEFAULT null,`key` text,`value` text,PRIMARY KEY (`network_uuid`,`key`),CONSTRAINT `fk_networks_meta_tags` FOREIGN KEY (`network_uuid`) REFERENCES `networks`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `device_meta_tags` (`device_uuid` varchar(255) NOT NULL DEFAULT null,`key` text,`value` text,PRIMARY KEY (`device_uuid`,`key`),CONSTRAINT `fk_devices_meta_tags` FOREIGN KEY (`device_uuid`) REFERENCES `devices`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `point_meta_tags` (`point_uuid` varchar(255) NOT NULL DEFAULT null,`key` text,`value` text,PRIMARY KEY (`point_uuid`,`key`),CONSTRAINT `fk_points_meta_tags` FOREIGN KEY (`point_uuid`) REFERENCES `points`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `locations` (`uuid` varchar(255) UNIQUE,`name` varchar(255) NOT NULL UNIQUE,`description` text,`address` text,`city` text,`state` text,`zip` text,`country` text,`lat` text,`lon` text,`timezone` text,PRIMARY KEY (`uuid`));
CREATE TABLE `host_comments` (`uuid` text,`host_uuid` text NOT NULL,`comment` text,`updated_at` datetime,PRIMARY KEY (`uuid`),CONSTRAINT `fk_hosts_comments` FOREIGN KEY (`host_uuid`) REFERENCES `hosts`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `snapshot_logs` (`file` text,`description` text,PRIMARY KEY (`file`));
CREATE TABLE `snapshot_create_logs` (`uuid` text,`host_uuid` text,`msg` text,`status` text,`description` text,`created_at` datetime,PRIMARY KEY (`uuid`));
CREATE TABLE `snapshot_restore_logs` (`uuid` text,`host_uuid` text,`msg` text,`status` text,`description` text,`created_at` datetime,PRIMARY KEY (`uuid`));
CREATE TABLE `team_members` (`team_uuid` text,`member_uuid` varchar(255),PRIMARY KEY (`team_uuid`,`member_uuid`),CONSTRAINT `fk_team_members_team` FOREIGN KEY (`team_uuid`) REFERENCES `teams`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_team_members_member` FOREIGN KEY (`member_uuid`) REFERENCES `members`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `view_settings` (`uuid` varchar(255) UNIQUE,`logo` JSON,`theme` JSON,`widget_config` JSON,PRIMARY KEY (`uuid`));
CREATE TABLE `views` (`uuid` varchar(255) UNIQUE,`name` varchar(255) NOT NULL,`type` text,`widget_config` JSON,`theme` JSON,`data` text,`view_template_uuid` text,`location_uuid` varchar(255),`group_uuid` text,`host_uuid` text,PRIMARY KEY (`uuid`),CONSTRAINT `fk_hosts_views` FOREIGN KEY (`host_uuid`) REFERENCES `hosts`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_groups_views` FOREIGN KEY (`group_uuid`) REFERENCES `groups`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_locations_views` FOREIGN KEY (`location_uuid`) REFERENCES `locations`(`uuid`) ON DELETE CASCADE);
CREATE UNIQUE INDEX `idx_views_name_host_uuid` ON `views`(`name`,`host_uuid`);
CREATE UNIQUE INDEX `idx_views_name_group_uuid` ON `views`(`name`,`group_uuid`);
CREATE UNIQUE INDEX `idx_views_name_location_uuid` ON `views`(`name`,`location_uuid`);
CREATE TABLE `view_widgets` (`uuid` varchar(255) UNIQUE,`name` varchar(255) NOT NULL,`order` integer,`x` integer,`y` integer,`view_uuid` varchar(255),`type` text,`config` JSON,`host_uuid` text,`class` text,`has_diff_rw` numeric,`network_uuid` text,`point_uuid` text,`write_point_uuid` text,`schedule_uuid` text,`query` text,`network_name` text,`device_name` text,`point_name` text,`write_network_name` text,`write_device_name` text,`write_point_name` text,`schedule_name` text,PRIMARY KEY (`uuid`),CONSTRAINT `fk_views_widgets` FOREIGN KEY (`view_uuid`) REFERENCES `views`(`uuid`) ON DELETE CASCADE);
CREATE UNIQUE INDEX `idx_view_widgets_name_view_uuid` ON `view_widgets`(`name`,`view_uuid`);
CREATE TABLE `view_templates` (`uuid` varchar(255) UNIQUE,`name` varchar(255) NOT NULL UNIQUE,PRIMARY KEY (`uuid`));
CREATE TABLE `view_template_widgets` (`uuid` varchar(255) UNIQUE,`view_template_uuid` varchar(255),`name` varchar(255) NOT NULL,`order` integer,`x` integer,`y` integer,`type` text,`config` JSON,`class` text,`has_diff_rw` numeric,`network_name` text,`device_name` text,`point_name` text,`write_network_name` text,`write_device_name` text,`write_point_name` text,`schedule_name` text,`query` text,PRIMARY KEY (`uuid`),CONSTRAINT `fk_view_templates_view_template_widgets` FOREIGN KEY (`view_template_uuid`) REFERENCES `view_templates`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `view_template_widget_pointers` (`uuid` varchar(255) UNIQUE,`view_template_widget_uuid` varchar(255),`view_uuid` text,`host_uuid` text,`network_uuid` text,`point_uuid` text,`write_point_uuid` text,`schedule_uuid` text,`query` text,PRIMARY KEY (`uuid`),CONSTRAINT `fk_view_template_widgets_view_template_widget_pointers` FOREIGN KEY (`view_template_widget_uuid`) REFERENCES `view_template_widgets`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `team_views` (`team_uuid` text NOT NULL DEFAULT null,`view_uuid` varchar(255) NOT NULL DEFAULT null,PRIMARY KEY (`team_uuid`,`view_uuid`),CONSTRAINT `fk_teams_views` FOREIGN KEY (`team_uuid`) REFERENCES `teams`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_views_team_views` FOREIGN KEY (`view_uuid`) REFERENCES `views`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `tickets` (`uuid` varchar(255) UNIQUE,`alert_uuid` text,`issuer` text,`subject` text,`content` text,`priority` text,`status` text,`created_at` datetime,`updated_at` datetime,`last_write` datetime,PRIMARY KEY (`uuid`),CONSTRAINT `fk_alerts_tickets` FOREIGN KEY (`alert_uuid`) REFERENCES `alerts`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `ticket_comments` (`uuid` varchar(255) UNIQUE,`ticket_uuid` varchar(255) NOT NULL,`owner` text,`content` text,`created_at` datetime,`updated_at` datetime,`last_write` datetime,PRIMARY KEY (`uuid`),CONSTRAINT `fk_tickets_comments` FOREIGN KEY (`ticket_uuid`) REFERENCES `tickets`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `ticket_teams` (`ticket_uuid` varchar(255) NOT NULL DEFAULT null,`team_uuid` text NOT NULL DEFAULT null,PRIMARY KEY (`ticket_uuid`,`team_uuid`),CONSTRAINT `fk_tickets_teams` FOREIGN KEY (`ticket_uuid`) REFERENCES `tickets`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_teams_tickets` FOREIGN KEY (`team_uuid`) REFERENCES `teams`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `ticket_members` (`ticket_uuid` varchar(255) NOT NULL DEFAULT null,`member_uuid` varchar(255) NOT NULL DEFAULT null,PRIMARY KEY (`ticket_uuid`,`member_uuid`),CONSTRAINT `fk_tickets_members` FOREIGN KEY (`ticket_uuid`) REFERENCES `tickets`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_members_tickets` FOREIGN KEY (`member_uuid`) REFERENCES `members`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `fcm_servers` (`uuid` varchar(255) UNIQUE,`key` text,PRIMARY KEY (`uuid`));
CREATE TABLE `alert_meta_tags` (`alert_uuid` text NOT NULL DEFAULT null,`key` text,`value` text,PRIMARY KEY (`alert_uuid`,`key`),CONSTRAINT `fk_alerts_meta_tags` FOREIGN KEY (`alert_uuid`) REFERENCES `alerts`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `team_meta_tags` (`team_uuid` text NOT NULL DEFAULT null,`key` text,`value` text,PRIMARY KEY (`team_uuid`,`key`),CONSTRAINT `fk_teams_meta_tags` FOREIGN KEY (`team_uuid`) REFERENCES `teams`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `stream_logs` (`uuid` varchar(255) UNIQUE,`service` text,`duration` integer,`number_of_lines` integer,`status` text,`key_words_filter` JSON,`messages` JSON,PRIMARY KEY (`uuid`));
CREATE TABLE IF NOT EXISTS "plugins" (`uuid` varchar(255) UNIQUE,"name" varchar(255) NOT NULL UNIQUE,`enabled` numeric,`config` blob,`storage` blob, `message_level` text, `message` text,PRIMARY KEY (`uuid`));
CREATE INDEX `idx_alerts_status` ON `alerts`(`status`);
CREATE TABLE IF NOT EXISTS "schedules" (`uuid` varchar(255) UNIQUE,`name` varchar(255) NOT NULL UNIQUE,`enable` numeric DEFAULT false,`thing_class` text,`thing_type` text,`is_active` numeric,`active_weekly` numeric,`active_exception` numeric,`active_event` numeric,`enable_payload` numeric,`min_payload` real,`max_payload` real,`payload` real,`default_payload` real,`period_start` integer,`period_stop` integer,`next_start` integer,`next_stop` integer,`period_start_string` text,`period_stop_string` text,`next_start_string` text,`next_stop_string` text,`schedule` JSON,`created_at` datetime,`updated_at` datetime,`last_write` datetime,`global_uuid` text,`connection` text DEFAULT "Connected",`connection_message` text, `nullable_output` numeric,PRIMARY KEY (`uuid`));
CREATE TABLE `hosts_tags` (`host_uuid` text,`tag_tag` varchar(255) NOT NULL DEFAULT null,PRIMARY KEY (`host_uuid`,`tag_tag`),CONSTRAINT `fk_hosts_tags_host` FOREIGN KEY (`host_uuid`) REFERENCES `hosts`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_hosts_tags_tag` FOREIGN KEY (`tag_tag`) REFERENCES `tags`(`tag`) ON DELETE CASCADE);
CREATE UNIQUE INDEX `idx_histories_point_uuid_host_uuid_timestamp` ON `histories`(`point_uuid`,`host_uuid`,`timestamp`);
CREATE TABLE `alert_transactions` (`uuid` varchar(255) UNIQUE,`alert_uuid` text NOT NULL DEFAULT null,`status` text,`severity` text,`target` text,`title` text,`body` text,`created_at` datetime,PRIMARY KEY (`uuid`,`alert_uuid`),CONSTRAINT `fk_alerts_transactions` FOREIGN KEY (`alert_uuid`) REFERENCES `alerts`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `email_configs` (`uuid` varchar(255) UNIQUE,`type` text DEFAULT "SMTP",`enable` numeric DEFAULT true,`queue_size` integer DEFAULT 10,`config` JSON,PRIMARY KEY (`uuid`));
CREATE TABLE `emails` (`uuid` varchar(255) UNIQUE,`to` text,`subject` text,`body` text,`status` text,`error` text,`created_at` datetime,`updated_at` datetime, `cc` text, `bcc` text,PRIMARY KEY (`uuid`));
CREATE TABLE `metric_logs` (`id` integer,`name` text,`value` real,`timestamp` datetime,PRIMARY KEY (`id`));
CREATE INDEX `idx_metric_logs_id` ON `metric_logs`(`id`);
CREATE TABLE `alert_conditions` (`uuid` varchar(255) UNIQUE,`name` text,`alert_types` text,`alert_statuses` text,`alert_severities` text, `host_uuids` text,PRIMARY KEY (`uuid`));
CREATE TABLE `alert_conditions_tags` (`alert_condition_uuid` varchar(255),`tag_tag` varchar(255) NOT NULL DEFAULT null,PRIMARY KEY (`alert_condition_uuid`,`tag_tag`),CONSTRAINT `fk_alert_conditions_tags_alert_condition` FOREIGN KEY (`alert_condition_uuid`) REFERENCES `alert_conditions`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_alert_conditions_tags_tag` FOREIGN KEY (`tag_tag`) REFERENCES `tags`(`tag`) ON DELETE CASCADE);
CREATE TABLE `alert_condition_meta_tags` (`alert_condition_uuid` varchar(255) NOT NULL DEFAULT null,`key` text,`value` text,PRIMARY KEY (`alert_condition_uuid`,`key`),CONSTRAINT `fk_alert_conditions_meta_tags` FOREIGN KEY (`alert_condition_uuid`) REFERENCES `alert_conditions`(`uuid`) ON DELETE CASCADE);
CREATE TABLE `alert_condition_teams` (`alert_condition_uuid` varchar(255) NOT NULL DEFAULT null,`team_uuid` text NOT NULL DEFAULT null,PRIMARY KEY (`alert_condition_uuid`,`team_uuid`),CONSTRAINT `fk_teams_alert_conditions` FOREIGN KEY (`team_uuid`) REFERENCES `teams`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_alert_conditions_teams` FOREIGN KEY (`alert_condition_uuid`) REFERENCES `alert_conditions`(`uuid`) ON DELETE CASCADE);
CREATE UNIQUE INDEX `idx_alerts_host_uuid_entity_type_entity_uuid_type_title` ON `alerts`(`host_uuid`,`entity_type`,`entity_uuid`,`type`,`title`);
CREATE TABLE IF NOT EXISTS "mqtt_connections" (`uuid` varchar(255) UNIQUE,`enabled` numeric,`master` numeric,`name` text,`host` text,`port` integer,`authentication` numeric,`username` text,`password` text,`keepalive` integer,`qos` integer,`retain` numeric,`attempt_reconnect_on_unavailable` numeric,`attempt_reconnect_secs` integer,`timeout` integer,`integration_uuid` varchar(255) references integrations DEFAULT null,PRIMARY KEY (`uuid`),CONSTRAINT `fk_integrations_mqtt_connection` FOREIGN KEY (`integration_uuid`) REFERENCES `integrations`(`uuid`) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS "networks" (`uuid` varchar(255) UNIQUE,`name` text,`description` text,`enable` numeric DEFAULT false,`in_fault` numeric,`message_level` text,`message_code` text,`message` text,`message_fail` text,`last_ok` datetime,`last_fail` datetime,`created_at` datetime,`updated_at` datetime,`last_write` datetime,`manufacture` text,`model` text,`writeable_network` numeric,`thing_class` text,`thing_ref` text,`thing_type` text,`transport_type` varchar(255) NOT NULL,`plugin_uuid` varchar(255) NOT NULL DEFAULT null,"plugin_name" text,`number_of_networks_permitted` integer,`network_interface` text,`ip` text,`port` integer,`network_mask` integer,`address_id` text,`address_uuid` text,`serial_port` varchar(255),`serial_baud_rate` integer,`serial_stop_bits` integer,`serial_parity` text,`serial_data_bits` integer,`serial_timeout` integer,`serial_connected` numeric,`host` text,`max_poll_rate` real,`has_polling_statistics` numeric,`global_uuid` text,`connection` text DEFAULT "Connected",`connection_message` text,`source_uuid` text,`source_plugin_name` text,`is_clone` numeric DEFAULT false,`host_uuid` text DEFAULT null,`history_enable` numeric DEFAULT false,`supports_device_ping` numeric,`config` JSON,PRIMARY KEY (`uuid`),CONSTRAINT `fk_hosts_networks` FOREIGN KEY (`host_uuid`) REFERENCES `hosts`(`uuid`) ON DELETE CASCADE,CONSTRAINT `fk_plugins_network` FOREIGN KEY (`plugin_uuid`) REFERENCES `plugins`(`uuid`) ON DELETE CASCADE);
CREATE UNIQUE INDEX `idx_networks_name_host_uuid` ON `networks`(`name`,IFNULL(host_uuid,""));
CREATE TABLE IF NOT EXISTS "devices" (`uuid` varchar(255) UNIQUE,`name` text,`description` text,`enable` numeric DEFAULT false,`in_fault` numeric,`message_level` text,`message_code` text,`message` text,`message_fail` text,`last_ok` datetime,`last_fail` datetime,`created_at` datetime,`updated_at` datetime,`last_write` datetime,`thing_class` text,`thing_ref` text,`thing_type` text,`manufacture` text,`model` text,`address_id` integer,`zero_mode` numeric,`poll_delay_points_ms` integer,`address_uuid` varchar(255),`host` text,`port` integer,`device_mac` integer,`device_object_id` integer,`network_number` integer,`max_adpu` integer,`segmentation` text,`device_mask` integer,`type_serial` numeric,`transport_type` text,`supports_rpm` numeric,`supports_wpm` numeric,`network_uuid` varchar(255) NOT NULL DEFAULT null,`number_of_devices_permitted` integer,`fast_poll_rate` real,`normal_poll_rate` real,`slow_poll_rate` real,`delay_between_points` integer,`device_timeout` integer,`connection` text DEFAULT "Connected",`connection_message` text,`source_uuid` text,`history_enable` numeric DEFAULT false, `delay_between_points_ms` integer, `config` JSON, `is_clone` numeric DEFAULT false, `disable_grouping` numeric DEFAULT false, `enable_concurrency` numeric DEFAULT false, `concurrency_limit` integer DEFAULT 10,PRIMARY KEY (`uuid`),CONSTRAINT `fk_networks_devices` FOREIGN KEY (`network_uuid`) REFERENCES `networks`(`uuid`) ON DELETE CASCADE);
CREATE UNIQUE INDEX `idx_devices_name_network_uuid` ON `devices`(`name`,`network_uuid`);
CREATE TABLE IF NOT EXISTS "points" (`uuid` varchar(255) UNIQUE,`name` text,`description` text,`enable` numeric DEFAULT false,`created_at` datetime,`updated_at` datetime,`last_write` datetime,`thing_class` text,`thing_ref` text,`thing_type` text,`in_fault` numeric,`message_level` text,`message_code` text,`message` text,`message_fail` text,`last_ok` datetime,`last_fail` datetime,`present_value` real,`original_value` real,`display_value` text,`write_value` real,`write_value_original` real,`current_priority` integer,`write_priority` integer,`is_output` numeric,`is_type_bool` numeric,`in_sync` numeric,`fallback` real,`device_uuid` varchar(255) NOT NULL DEFAULT null,`enable_writeable` numeric,`math_on_present_value` text,`math_on_write_value` text,`cov` real,`object_type` text,`object_id` integer,`data_type` text,`is_bitwise` numeric,`bitwise_index` integer,`object_encoding` text,`io_number` text,`io_type` text,`address_id` integer,`address_length` integer,`address_uuid` text,`next_available_address` numeric,`decimal` integer,`multiplication_factor` real,`scale_enable` numeric,`scale_in_min` real,`scale_in_max` real,`scale_out_min` real,`scale_out_max` real,`offset` real,`unit_type` text,`unit` text,`unit_to` text,`value_updated_flag` numeric,`point_priority_array_mode` text,`write_mode` text,`read_write_type` text,`write_poll_required` numeric,`read_poll_required` numeric,`poll_priority` text,`poll_rate` text,`ba_cnet_write_to_pv` numeric,`history_enable` numeric DEFAULT false,`history_type` text,`history_interval` integer,`history_cov_threshold` real,`connection` text DEFAULT "Connected",`connection_message` text,`source_uuid` text,`last_history_value` real, `point_state` text, `last_history_timestamp` datetime, `config` JSON, `poll_on_startup` numeric, `is_clone` numeric DEFAULT false,PRIMARY KEY (`uuid`),CONSTRAINT `fk_devices_points` FOREIGN KEY (`device_uuid`) REFERENCES `devices`(`uuid`) ON DELETE CASCADE);
CREATE UNIQUE INDEX `idx_points_name_device_uuid` ON `points`(`name`,`device_uuid`);
CREATE TABLE IF NOT EXISTS "member_devices" (`uuid` varchar(255) UNIQUE,`member_uuid` varchar(255) NOT NULL DEFAULT null,`device_id` text,`device_name` text,`platform` text,PRIMARY KEY (`uuid`),CONSTRAINT `fk_members_member_devices` FOREIGN KEY (`member_uuid`) REFERENCES `members`(`uuid`) ON DELETE CASCADE);
CREATE UNIQUE INDEX `idx_member_devices_member_uuid_device_id` ON `member_devices`(`member_uuid`,`device_id`);
CREATE TABLE IF NOT EXISTS "groups" (`uuid` text,`name` varchar(255) NOT NULL,`location_uuid` varchar(255) NOT NULL DEFAULT null,`description` text,PRIMARY KEY (`uuid`),CONSTRAINT `fk_locations_groups` FOREIGN KEY (`location_uuid`) REFERENCES `locations`(`uuid`) ON DELETE CASCADE);
CREATE UNIQUE INDEX `idx_groups_name_location_uuid` ON `groups`(`name`,`location_uuid`);
CREATE TABLE IF NOT EXISTS "hosts" (`uuid` text,`global_uuid` text,`device_type` text,`name` varchar(255) NOT NULL,`group_uuid` text NOT NULL DEFAULT null,`enable` numeric,`description` text,`ip` text,`bios_port` integer,`port` integer,`http_s` numeric,`is_online` numeric,`is_valid_token` numeric,`external_token` text,`virtual_ip` text,`received_bytes` integer,`sent_bytes` integer,`connected_since` text,`history_enable` numeric DEFAULT false, `ping_fail_count` integer, `ros_version` text, `ros_restart_expression` text, `timezone` text, `disconnected_since` text, `reboot_expression` text,PRIMARY KEY (`uuid`),CONSTRAINT `fk_groups_hosts` FOREIGN KEY (`group_uuid`) REFERENCES `groups`(`uuid`) ON DELETE CASCADE);
CREATE UNIQUE INDEX `idx_hosts_name_group_uuid` ON `hosts`(`name`,`group_uuid`);
CREATE TABLE IF NOT EXISTS "point_histories" (`id` integer,`point_uuid` varchar(255) NOT NULL DEFAULT null,`value` real,`timestamp` datetime,PRIMARY KEY (`id`));
CREATE INDEX `idx_point_histories_id` ON `point_histories`(`id`);
CREATE UNIQUE INDEX `idx_point_histories_point_uuid_timestamp` ON `point_histories`(`point_uuid`,`timestamp`);
CREATE TABLE IF NOT EXISTS "members" (`uuid` varchar(255) UNIQUE,`first_name` text,`last_name` text,`username` varchar(255) NOT NULL UNIQUE DEFAULT null,`password` text,`email` text,`permission` text,`state` text,PRIMARY KEY (`uuid`));
CREATE TABLE IF NOT EXISTS "email_attachments" (`uuid` varchar(255) UNIQUE,`email_uuid` varchar(255) NOT NULL DEFAULT null,`path` text,PRIMARY KEY (`uuid`),CONSTRAINT `fk_emails_attachments` FOREIGN KEY (`email_uuid`) REFERENCES `emails`(`uuid`) ON DELETE CASCADE);